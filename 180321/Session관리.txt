https://m.blog.naver.com/PostView.nhn?blogId=ehdtls0629&logNo=220481137948&proxyReferer=https%3A%2F%2Fwww.google.co.kr%2F

[session]

1. session : 한 명의 클라이언트가 프로그램을 시작해 종료할 때까지를 하나의 Session이라 함
	     하나의 session에서 클라이언트는 여러번의 요청과 응답이 반복될 수 있다.
-> 같은 웹브라우저 내에서 공유하는 것, 다른 웹브라우저끼리는 공유 x (ex : 크롬과 익스플로어)
-> 웹브라우저를 끄고 다시 키기 전까지는 공유함

2. session 관리 -> 정보를 유지
- 하나의 Session 동안 프로그램이 클라이언트와 관련된 Data를 계속 유지하도록 관리하는 것
- Http Protocol은 클라이언트의 상태유지를 못하는 Protocol -> 세션관리가 안됨!

* 세션 관리 : 서버가 "클라이언트의 정보를 유지"하는 것! - 어떤 정보? ) 클라이언트가 접속해 나갈 때까지 사용한 Data

3. Web Application에서의 Session 관리
- HttpSession을 이용하는 방식
- Cookie를 이용하는 방식
- URL Rewriting 방식 (거의 안씀)

서버에 저장하는 방식 : 세션
웹브라우저에 저장하는 방식 : 쿠키

어디에 정보가 저장되어 있든 결국 웹프로그램(서버)이 그 정보를 사용
==> 이 중 서버에 저장하는 방식을 쓸 것!



<HttpSession을 이용한 방식> data를 서버에 저장
서버에 저장, heap에 저장 -> 객체로 저장 가능 -> 클라이언트의 정보(상태값)를 서버단에 저장

클라이언트의 정보를 저장할 저장소를 서버단에 만들고 응답 시 저장소의 ID(=위치)를 쿠키값으로 클라이언트에 전송해서 공유한다.

장점 : 데이터타입(Object 타입의 객체), 개수, 크기에 제한이 없음 -> 서버에 저장되므로 쿠키보다 보안상 유리
단점 : 서버에 부담

저장소의 역할을 하는 객체 : javax.servlet.http.HttpSession

-조회
1. HttpServlet session = request.getSession(); -> request 를 통해 얻음, 매개변수는 boolean 값인데 없으면 기본값(true)임. (많이 쓰는 방법)
- 요청한 클라이언트와 연결된 Session 객체가 있으면 있는 것 리턴.
But 없으면 새로 생성해 리턴한다.

* Session이 있는지 없는지 확인하는 방법 : 쿠키값 (jsessionID)을 가지고 확인한다.

2. HttpSession session = request.getSession(false);
- 요청한 클라이언트와 연결된 Session 객체가 있으면 있는 것 리턴
But, 없으면 null을 리턴

- 주요 메서드
- setAttribute(String name,Object value)     - 클라이언트 상태값 저장(Attribute)

    - getAttribute(String name) : Object value    - 클라이언트 상태값 조회

    - removeAttribute(String name) : void        - 클라이언트 상태값 삭제

    - invalidate() : void                             -Session을 소멸(로그아웃시 사용- 이런경우에만 쓰임)-> 저장소 소멸

                                                                  -> 로그아웃할때 사용!

    - getAttributeNames() : Enumeration          - 이름들 조회 (전체적으로 조회하거나 삭제할때 주로 사용) - 참고정도





사용자가 세션에 시간을 설정할 수 있다 - ex) 5분으로 설정을 해놨다면 5분뒤 연결 끊김



1. web.xml에 연결해서 전체적으로 공통적으로 적용하기



2. 특정 세션에만 적용시키는 경우(주로 1번사용)



이런 작업(사용자가 설정한 일정시간 후에 자동적으로 연결 끊기)을 하지 않으면 -> 쓸데 없이 세션들이 만들어질 수 있다.

